{
    "name": "Bass Fuji",
    "variables":
    {
        // Leave emprty string("") for ununsed variables. 
        // Unused commented vars will cause errors in console when using replaceVars method.
        // E.g. Commented, "line_diff_width": "var(line-diff-width)"
        // E.g. Empty string, "line_diff_width": ""

        /** Globals variables */

        "bg-color":                   "var(white1)",
        "fg-color":                   "var(black4)", // Popup definiton/reference text
        "invisibles":                 "var(gray3)",
        "caret":                      "var(gray6)", // mouse cursor
        "block-caret":                "",
        "line-highlight":             "var(blue-light1)",
        /** Accents */
        "misspelling":                "var(orange1)",
        "fold-marker":                "var(yellow1)", // when folded, the "..."
        "minimap-border":             "var(gray2)",
        "accent":                     "var(pink-light4)",
        /** Css */
        // Popup css: Example, bg color, link color, title color of definition/reference. Round corner, border, bg comes from Theme file.
        "popup-css": "\n      html, body {\n        background-color: transparent;\n        color: #9B9B9B;\n      }\n      body {\n        padding: 0px;\n      }\n      a {\n        color: #0282F2;\n      line-height: 1.6em;\n      text-decoration: underline;\n}\n    ",
        // "popup_css": "\n      html, body {\n        background-color: #f4f5f6;\n        border-radius: 4px;\n      color: #808080;\n      }\n      body {\n        padding: 6px 12px;\n      }\n      a {\n        color: #404040;\n      line-height: 1.6em;\n      text-decoration: none;\n}\n    ",
        // phantom css, to test -> it is the badge/button "UI:select color scheme/theme" inside text line control overlay. 
        "phantom-css": "\n      html, body {\n        background-color: #B4B4B4;\n        border-radius: 4px;\n      color: #161818;\n      }\n      body {\n        padding: 1px 3px;\n      }\n      a {\n        color: #5DD8FF;\n      line-height: 1.6em;\n      text-decoration: underline;\n}\n    ",
        // "sheet_css": ,
        /** Gutter */
        "gutter":                     "var(bg-color)",
        "gutter-foreground":          "color(var(gray2) a(0.7))",
        "gutter-foreground-hl":       "var(magenta3)",
        // "gutter_foreground": "{font-family: Helvetica";\n        font-size: 8px;\n      color: #808080;\n}",
        /** Diff */
        "line-diff-width":            "", // default 3
        "line-diff-added":            "var(blue3)",
        "line-diff-modified":         "var(gold1)",
        "line-diff-deleted":          "var(red3)",
        /** Selection */
        "selection":                  "var(blue-light1)",
        "selection-fg":               "var(gray4)",
        "selection-border":           "var(blue-light2)",
        "selection-border-width":     "1",
        "inactive-selection":         "color(var(blue-light4) a(0.4))",
        "inactive-selection-fg":      "var(gray4)",
        "selection-corner-style":     "round",
        "selection-corner-radius":    "2",
        /** Find */
        "highlight":                  "color(var(purple2) a(0.7))",
        "find-highlight":             "var(blue-light2)",
        "find-highlight-fg":          "var(blue2)",
        "scroll-highlight":           "var(magenta3)",
        /** Rulers */
        "rulers":                     "var(black4)",
        /** Guides */
        "guide":                      "color(var(gray3) a(0.5))",
        "active-guide":               "var(blue1)",
        "stack-guide":                "color(var(gray3) a(0.5))",
        /** Brackets */
        "brackets-opts":              "underline",
        "brackets-fg":                "var(blue1)",
        "bracket-contents-opts":      "underline",
        "bracket-contents-fg":        "var(blue5)",
        /** Tags */
        "tags-opts":                  "underline",
        "tags-fg":                    "var(blue1)",
        /** Shadows */
        "shadow":                     "color(var(black4) a(0.3))",
        "shadow-width":               "3",

        /** Rules variables*/

        /** Entity */
        "entity-name-fg":                  "var(cyan2)",
        "entity-inherited-class-fg":       "var(blue2)",
        // "entity-name-section-fg":          "var(purple1)",
        // "entity-name-tag-fg":              "var(cyan3)",
        "entity-attribute-name-fg":        "var(purple3)",
        "entity-other-pseudo-class-fg":    "var(purple2)",

        /** Variable */
        // "variable-fg":                   "var(green4)",
        // "variable-lang-font-style":      "italic",
        // "variable-lang-fg":              "var(purple1)",
        // "variable-param-fg":             "var(purple1)",
        "variable-fn-fg":                "var(green2)",
        "variable-other-constant-fg":    "var(brown1)",

        /** Constant */
        // "constant-fg":                "var(green4)",
        "constant-num-fg":            "var(blue4)",
        // "constant-lang-fg":           "var(blue3)",
        // "constant-char-escape-fg":    "var(blue4)",

        /** Storage */
        // "storage-fg":             "var(purple3)",
        "storage-modifier-fg":    "var(purple3)",

        /** Support */
        // "support-fg":          "var(green3)",
        "support-fn-fg":       "var(green2)",
        "support-class-fg":    "var(brown1)",

        /** Keyword */
        "keyword-font-style":        "normal",
        "keyword-fg":                "var(purple2)",
        // "keyword-ctrl-fg":           "var(purple3)",
        "keyword-operator-fg":       "var(purple3)",
        // "keyword-declaration-fg":    "var(green3)",

        /** String */
        "string-fg":    "var(black4)",

        /** Comment */
        "comment-font-style":    "normal",
        "comment-fg":            "var(green3)",

        /** Invalid */
        // "invalid-fg":               "var(red1)",
        "invalid-deprecated-fg":    "var(red2)",
        "invalid-illegal-fg":       "color(var(red1) a(0.7))",

        // End minimal recommended setup

        /** Markdown / Markup */
        "constant-other-lang-name-md-font-style":     "italic",
        "constant-other-lang-name-md-fg":             "var(gray3)",
        "markup-heading-font-style":                  "bold",
        "markup-heading-fg":                          "var(purple2)",
        "markup-list-font-style":                     "normal",
        "markup-list-fg":                             "",
        "markup-bold-font-style":                     "bold",
        "markup-bold-fg":                             "",
        "markup-italic-font-style":                   "italic",
        "markup-italic-fg":                           "",
        "markup-underline-font-style":                "underline",
        "markup-bold-italic-font-style":              "bold italic",
        "markup-bold-underline-font-style":           "bold underline",
        "markup-italic-underline-font-style":         "italic underline",
        "markup-bold-italic-underline-font-style":    "bold italic underline",
        "markup-quote-font-style":                    "italic",
        "markup-quote-fg":                            "var(green2)",
        "markup-raw-bg":                              "var(gray1)",
        "markup-link-fg":                             "var(blue3)",
        "markup-table-bg":                            "var(gray1)",
        "markup-table-fg":                            "",
        "punctuation-line-break-md-bg":               "color(var(gray1) a(0.7))",

        /** Diff */
        "markup-changed-bg":      "hsla(55, 100%, 55%, 0.44)", //"color(var(yellow5) a(0.44))",
        "markup-changed-fg":      "var(orange3)",
        "markup-deleted-bg":      "hsla(338, 65%, 56%, 0.22)", //"color(var(pink2) a(0.22))",
        "markup-deleted-fg":      "color(var(red2) a(0.9))",
        "markup-inserted-bg":     "hsla(111, 77%, 55%, 0.29)", //"color(var(green7) a(0.29))",
        "markup-inserted-fg":     "color(var(green2) a(0.9))",
        "meta-diff-header-bg":    "hsla(211, 77%, 50%, 0.17)", //"color(var(blue7) a(0.17))",
        "meta-diff-header-fg":    "var(blue2)",

        /** Inline Diffs */
        "diff-deleted-bg":          "hsla(338, 65%, 56%, 0.14)",
        "diff-deleted-fg":          "color(var(red2) a(0.6))",
        "diff-deleted-char-bg":     "hsla(338, 50%, 56%, 0.22)",
        "diff-deleted-char-fg":     "color(var(red2) a(0.9))",
        "diff-inserted-bg":         "hsla(111, 77%, 55%, 0.17)",
        "diff-inserted-fg":         "color(var(green2) a(0.8))",
        "diff-inserted-char-bg":    "hsla(111, 77%, 55%, 0.29)",
        "diff-inserted-char-fg":    "color(var(green2) a(0.9))",

        /** Javascript */
        "constant-lang-null-js-font-style":                  "normal",
        "constant-lang-null-js-fg":                          "var(blue4)",
        "entity-other-attribute-name-doc-js-fg":             "var(brown1)",
        "meta-string-quoted-js-fg":                          "var(blue2)",
        "support-other-js-fg":                               "var(green-light4)",
        "variable-other-class-js-fg":                        "var(brown1)",

        /** Key Value - Json, Yaml, Javascript */
        "meta-mapping-key-fg":      "var(purple2)",
        "meta-mapping-value-fg":    "var(blue2)",

        /** HTML */
        "entity-other-attribute-name-html-fg":    "var(purple3)",

        /** CSS */
        "meta-at-rule-other-css-fg":          "var(blue2)",
        "constant-css-fg":                    "var(gray4)",
        "support-entity-property-css-fg":     "var(brown1)",

        /** C# */
        "storage-type-method-params-cs-fg":    "var(blue2)",

        /** Go */
        "constant-lang-go-fg":                   "var(blue4)",
        "storage-support-type-builtin-go-fg":    "color(var(magenta3) a(0.7))",
        "string-quoted-go-fg":                   "var(blue2)",

        /** Git */
        "meta-mapping-value-git-attributes-fg":    "var(purple2)",

        /** Sql */
        "constant-lang-null-sql-fg":                  "var(red1)",
        "keyword-operator-logical-sql-font-style":    "normal",
        "keyword-operator-logical-sql-fg":            "var(red1)",
        "storage-modifier-sql-fg":                    "var(blue5)",

        /** Toml */
        "entity-name-table-toml-fg":    "var(blue2)",
        "entity-name-tag-toml-fg":      "var(purple2)",

        /** Rails */
        "meta-model-rails-fg":    "var(blue2)",

        /** Ruby */
        "constant-lang-bool-rb-fg":                     "var(blue4)",
        "entity-name-class-ruby-fg":                    "var(black4)",
        "constant-rb-fg":                               "var(blue2)",
        "variable-other-readwrite-instance-ruby-fg":    "var(purple3)",

        /** Rust Enhanced */
        "constant-lang-rust-fg":       "var(brown1)",
        "entity-name-fn-rust-fg":      "var(cyan2)",
        "keyword-ctrl-rust-fg":        "var(purple3)",
        "keyword-operator-rust-fg":    "var(purple3)",
        "string-quoted-rust-fg":       "var(blue2)",
        "storage-modifier-rust-fg":    "var(magenta3)",
        "storage-type-rust-fg":        "var(purple3)",
        "support-macro-rust-fg":       "var(green2)",
        "support-type-rust-fg":        "var(brown1)"

    },
    "globals": {},
    "rules": []
}